
// ***********************************************************************
// Author           : Mark C
// Created          : 15-May-2018
//
// ***********************************************************************
// <copyright file="MCXMLTagsDefines.h" company="AVT">
//     Copyright (c) AVT. All rights reserved.
// </copyright>
// ***********************************************************************

#pragma once

bool STR_TO_BOOL( const CString &sBool ) 
{ 
	return ( ( sBool.CompareNoCase( TEXT( "FALSE" ) ) == 0 ) || ( sBool == TEXT( "0" ) ) ) ? false : true; 
} 

// Version definition
//const TCHAR* CURRENT_VERSION  = "1.0";

//		Jan-2014,Chetan, Modified for UNICODE Support, WI:Mercury Server - Unicode enhancement
const TCHAR* COMMENT_MULTIPLE			= TEXT( "Can have more than one child" );
const TCHAR* COMMENT_OTHERMEMBERS		= TEXT( "TO DO : Other Members" );
const TCHAR* VALUE						= TEXT( "Value" );
const TCHAR* NAME						= TEXT( "NAME" );
const TCHAR*	DESCRIPITION				= TEXT( "Descripition" );


//		Jan-2014,Chetan, Modified for UNICODE Support, WI:Mercury Server - Unicode enhancement
const TCHAR* ARRAY_SIZE						= TEXT( "Count" );

//		Jan-2014,Chetan, Modified for UNICODE Support, WI:Mercury Server - Unicode enhancement
const TCHAR* XT_MCSYSTEM_CONFIG				= TEXT( "MCSYSTEM_CONFIG" );
const TCHAR* XT_SYSTEM_SITENAME				= TEXT( "SITE_NAME" );
const TCHAR* XT_SITE_NUMBER					= TEXT( "SITE_NUMBER" );
const TCHAR* XT_MCSYSTEM_PRESSES				= TEXT( "MCPRESSES" );
const TCHAR* XT_SYSTEM_PRESS					= TEXT( "PRESS" );
const TCHAR* XT_MCACTIVESTATUS				= TEXT( "MC_ACTIVE_STATUS" );
const TCHAR* XT_MC_USER_CONFIGURATION		= TEXT( "MC_USER_CONFIGURATION" );
// Hem
//		Jan-2014,Chetan, Modified for UNICODE Support, WI:Mercury Server - Unicode enhancement
const TCHAR* XT_COLOR_R						= TEXT( "R" );
const TCHAR* XT_COLOR_G						= TEXT( "G" );
const TCHAR* XT_COLOR_B						= TEXT( "B" );

//const TCHAR* CQSYSTEM_CQJOBS				= "CQJOBS";

//		Jan-2014,Chetan, Modified for UNICODE Support, WI:Mercury Server - Unicode enhancement
const TCHAR* XT_MCSYSTEMCONFIG_VERSION		= TEXT("Version");

// PRESS
//		Jan-2014,Chetan, Modified for UNICODE Support, WI:Mercury Server - Unicode enhancement
const TCHAR* XT_PRESS_TYPE					= TEXT( "PRESS_TYPE");
const TCHAR* XT_PRESS_WIDTH					= TEXT( "PressWidth");
const TCHAR* XT_PRESS_UNITS					= TEXT( "PRESS_UNITS");
const TCHAR* XT_PRESS_UNIT					= TEXT( "UNIT");
const TCHAR* XT_PRESS_FOLDERS				= TEXT( "PRESS_FOLDERS");
const TCHAR* XT_PRESS_FOLDER					= TEXT( "FOLDER");
const TCHAR* XT_PRESS_UNITGROUPS				= TEXT( "PRESS_UNITGROUPS");
const TCHAR* XT_PRESS_UNITGROUP				= TEXT( "UNITGROUP");
const TCHAR* XT_PRESS_REELSTANDS				= TEXT( "PRESS_REELSTANDS");
const TCHAR* XT_PRESS_REELSTAND				= TEXT( "PRESS_REELSTAND");
const TCHAR* XT_MCPRESS_SPUS					= TEXT( "PRESS_SPUS");
const TCHAR* XT_MCPRESS_SPU					= TEXT( "SPU");
const TCHAR* XT_PRESS_CLIENTINTERFACE		= TEXT( "PRESS_CLIENTINTERFACE");
const TCHAR* XT_MCPRESS_CLIENTINTERFACE		= TEXT( "MCPRESS_CLIENTINTERFACE");
const TCHAR* XT_MCPRESS_CONSOLE_ZONES		= TEXT( "PRESS_CONSOLE_ZONES");
const TCHAR* XT_MCPRESS_NFSTABLE				= TEXT( "PRESS_NFSTABLE");
const TCHAR* XT_PRESS_NAME					= TEXT( "PRESS NAME");
const TCHAR* XT_MCPRESS_AUTO_TEST			= TEXT("PRESS_AUTO_TEST");
const TCHAR* XT_MCPRESS_SWEEP_TEST			= TEXT("PRESS_SWEEP_TEST");
const TCHAR* XT_KEYS_DISPLAY_ON_CLIENT		= TEXT("NumberOfDisplayKeys");

//		Jan-2014,Chetan, Modified for UNICODE Support, WI:Mercury Server - Unicode enhancement
const TCHAR* CQ_CLC_CONFIGURATION = TEXT( "CQ_CLC_CONFIGURATION");
const TCHAR* XT_CQ_CLC_ISCONFIGURED = TEXT( "IsCQCLCConfigured");
const TCHAR* XT_IP_ADDRESS = TEXT("IP_ADDRESS");
const TCHAR* XT_PORT = TEXT("PORT");
const TCHAR* XT_COMM_TYPE = TEXT("COMM_TYPE");

//		Jan-2014,Chetan, Modified for UNICODE Support, WI:Mercury Server - Unicode enhancement
const TCHAR* XT_ASCANCALRUN					= TEXT( "AutoScanCalRun");
const TCHAR* XT_CIP3FORM						= TEXT( "CIP3Form");
const TCHAR* XT_PAPERTYPE					= TEXT( "PaperType");

// MC PRESS - PAPER TYPE
//		Jan-2014,Chetan, Modified for UNICODE Support, WI:Mercury Server - Unicode enhancement
const TCHAR* XT_MCSYSTEM_PAPERLIBRARY		= TEXT( "MCSYSTEM_PAPERLIBRARY");
const TCHAR* XT_PAPER_TYPE					= TEXT( "PAPER_TYPE");
const TCHAR* XT_CAL_CURVE					= TEXT( "CAL_CURVE");
const TCHAR* XT_RAW_SCAN_VALUE				= TEXT( "RAW_SCAN_VALUE");
const TCHAR* XT_CORR_VALUE					= TEXT( "CORR_VALUE");
const TCHAR* XT_PAPER_TYPES					= TEXT( "PAPER_TYPES");
const TCHAR* XT_CAL_POINTS					= TEXT( "CAL_POINTS");

// MC PRESS - PRESS UNIT
// "Name" - already defined in CQNAME
//		Jan-2014,Chetan, Modified for UNICODE Support, WI:Mercury Server - Unicode enhancement
const TCHAR* XT_INKERS				= TEXT( "INKERS");
const TCHAR* XT_INKER				= TEXT( "INKER");
const TCHAR* XT_UNIT				= TEXT( "UNIT");
const TCHAR* XT_INDEX				= TEXT( "INDEX");

const TCHAR* XT_MC_SPLIT_CONFIGURATION      = TEXT( "MC_SPLIT_CONFIGURATION");
const TCHAR* XT_SPLIT                       = TEXT( "Split");

// PRESS UNIT - UNIT INKER
// "Name" - already defined in CQNAME
//		Jan-2014,Chetan, Modified for UNICODE Support, WI:Mercury Server - Unicode enhancement
const TCHAR* XT_UNIT_INKER_KEY1OPERATORSIDE		= TEXT( "Key1OperatorSide");
const TCHAR* XT_MCUNIT_INKER_SIDE				= TEXT( "UpperLowerInker");
const TCHAR* XT_SERVO_TURNS						= TEXT( "ServoTurns");
const TCHAR* XT_UNIT_INKER_MINVALUE				= TEXT( "MinValue");
const TCHAR* XT_UNIT_INKER_MAXVALUE				= TEXT( "MaxValue");
const TCHAR* XT_MCUNIT_INKER_KEYS				= TEXT( "INKER_KEYS");
const TCHAR* XT_MCUNIT_INKER_KEY					= TEXT( "INKER_KEY");
const TCHAR* XT_MCUNIT_INKER_SERVO_BANKS			= TEXT( "SERVO_BANKS");
const TCHAR* XT_MCUNIT_INKER_SERVO_BANK			= TEXT( "SERVO_BANK");
const TCHAR* XT_MCUNIT_INKER_INVERTED			= TEXT( "Inverted");
//const TCHAR* XT_MCUNIT_INKER_LINEAR_TABLE_INDEX	= "LinearTableIndex");
const TCHAR* XT_MCUNIT_INKER_LINEAR_TABLE_SIZE	= TEXT( "LinearTableSize");
const TCHAR* XT_CIP3_IMAGE_ROTATE_DEGREES		= TEXT( "CIP3_image_rotate_degrees");
const TCHAR* XT_CIP3_DATA_ROTATION				= TEXT( "CIP3_data_rotation");

// UNIT INKER - INKER KEY
//		Jan-2014,Chetan, Modified for UNICODE Support, WI:Mercury Server - Unicode enhancement
const TCHAR* XT_UNIT_INKER_ATTRIB_WIDTH			= TEXT( "Width");
//const TCHAR* MCUNIT_INKER_ATTRIB_MIN			= "Min");
//const TCHAR* MCUNIT_INKER_ATTRIB_MAX			= "Max");

// UNIT INKER - SERVO BANK
//		Jan-2014,Chetan, Modified for UNICODE Support, WI:Mercury Server - Unicode enhancement
const TCHAR* XT_MCINKER_SERVO_ADDRESS			= TEXT( "ServoAddress");
const TCHAR* XT_MCINKER_SERVO_TOTALKEYS			= TEXT( "TotalKeysToCtrl");
const TCHAR* XT_MCINKER_SERVO_START_KEY			= TEXT( "StartFromKey");
const TCHAR* XT_MC_INKER_BANK_INVERTED			= TEXT( "BankInverted");

//		Jan-2014,Chetan, Modified for UNICODE Support, WI:Mercury Server - Unicode enhancement
const TCHAR* XT_MCSERVO_BANK_SPU_NAME			= TEXT( "SPUName");
const TCHAR* XT_MCSERVO_BANK_SPU_PORT			= TEXT( "SPUPort");


// PRESS - UNITGROUP
// Node_Name -> "Name" - already defined in CQNAME
//		Jan-2014,Chetan, Modified for UNICODE Support, WI:Mercury Server - Unicode enhancement
const TCHAR* XT_UNITGROUP_UNITGROUPMEMS			= TEXT( "UNITGROUP_MEMS");
const TCHAR* XT_UNITGROUP_UNITGROUPMEM			= TEXT("UnitGroupMem");

// PRESS SPUS
//		Jan-2014,Chetan, Modified for UNICODE Support, WI:Mercury Server - Unicode enhancement
const TCHAR* XT_MCPRESS_IS_PLC_USED              = TEXT( "IS_USED");//07-April-10, Modified by Sreejit for MT#15430
const TCHAR* XT_MCPRESS_SPU_COMPORT				= TEXT( "COMPORT");
const TCHAR* XT_MCPRESS_PRESS_PLC_TYPE           = TEXT( "PLC_TYPE");//12-March-10, Modified by Sreejit for MT#15293
// PRESS OCU and CONSOLE ZONES 
//		Jan-2014,Chetan, Modified for UNICODE Support, WI:Mercury Server - Unicode enhancement
const TCHAR* XT_NUM_ZONES						= TEXT( "NumOfZones");
const TCHAR* XT_MCPRESS_OCU_ZONE_WIDTH			= TEXT( "ZoneWidthInCM");

//PRESS_NFSTABLE
//		Jan-2014,Chetan, Modified for UNICODE Support, WI:Mercury Server - Unicode enhancement
const TCHAR* XT_MCPRESS_NFSTABLE_BREAKPOINT	    = TEXT( "BreakPoint");
const TCHAR* XT_MCPRESS_NFSTABLE_GAIN		    = TEXT( "MaxKeyTurnsAtConsoleZone99");


// MC Press Client Interface 
const TCHAR* XT_MC_CLIENT_BLADE_STIFFNESS			= TEXT( "BladeStiffness");
const TCHAR* XT_MC_CLIENT_MAX_NEIGH_KEY_DELTA		= TEXT( "MaxNeighborKeyDelta");
const TCHAR* XT_MC_CLIENT_LINEAR_TABLE				= TEXT( "LinearTable");
const TCHAR* XT_MC_CLIENT_NON_LINEAR_TABLE			= TEXT( "NonLinearTable");
const TCHAR* XT_MC_CLIENT_DEFAULT_OFFSET				= TEXT( "DefaultOffset");
const TCHAR* XT_MC_CLIENT_SERVO_PULSES_ZONE_AT_ZERO	= TEXT( "ServoPulsesZoneAtZero");
const TCHAR* XT_MC_CLIENT_ZERO_BACKOFF				= TEXT( "PressZeroBackoffInPulses");
const TCHAR* XT_MC_CLIENTINTERFACE_CLIENTFEATURES	= TEXT( "MCCLIENT_FEATURES");
const TCHAR* XT_MC_WIDE_PRESS						= TEXT( "WidePress");
const TCHAR* XT_MC_CLIENT_KEEP_ZONE_LOCKED			= TEXT("KEEPZONELOCKStatus");
//MC PRESS CLIENT FEATURES
const TCHAR* XT_MC_CLIENT_FEATURE_NON_LINEAR					= TEXT( "NonLinear");
const TCHAR* XT_MC_CLIENT_FEATURE_BLADE_COMPENSATION			= TEXT( "BladeCompensation");
const TCHAR* XT_MC_CLIENT_FEATURE_CIP3_PRESETTING    		= TEXT( "CIP3Presetting");
const TCHAR* XT_MC_CLIENT_FEATURE_METER_OFFSET    			= TEXT( "MeterOffset");
const TCHAR* XT_MC_CLIENT_FEATURE_SWEEP_CONTROL				= TEXT( "SWEEP_CONTROL");
const TCHAR* XT_MC_CLIENT_FEATURE_WATER_CONTROL				= TEXT( "WATER_CONTROL");
const TCHAR* XT_TOP												= TEXT( "Top");
const TCHAR* XT_UPPER											= TEXT( "Upper");
const TCHAR* XT_BOTTOM											= TEXT( "Bottom");
const TCHAR* XT_LOWER											= TEXT( "Lower");

// Press Client Interface
const TCHAR* XT_CLIENTINTERFACE_CLIENTFEATURES		= TEXT( "CLIENT_FEATURES");
const TCHAR* XT_CLIENTINTERFACE_CLIENTPASSWORDS		= TEXT( "CLIENT_PASSWORDS");
const TCHAR* XT_CLIENTINTERFACE_CLIENTPATHNAMES		= TEXT( "CLIENT_PATHNAMES");
const TCHAR* XT_CLIENTINTERFACE_DISPLAYOPTIONTOP		= TEXT( "DISPLAYOPTION_TOP");
const TCHAR* XT_CLIENTINTERFACE_DISPLAYOPTIONBOT		= TEXT( "DISPLAYOPTION_BOTTOM");
const TCHAR* XT_CLIENTINTERFACE_CURRENTLANGUAGE		= TEXT( "CurrentLanguage");
const TCHAR* XT_CLIENTINTERFACE_FILTERNAMES			= TEXT( "FilterNames");
const TCHAR* XT_CLIENTINTERFACE_FILTERNAME			= TEXT( "Filter");
const TCHAR* XT_CLIENTINTERFACE_METRICDISPLAYS		= TEXT( "MetricDisplays");
const TCHAR* XT_CLIENTINTERFACE_SPEEDDISPLAYFORMAT	= TEXT( "SpeedDisplayFormat");
const TCHAR* XT_CLIENTINTERFACE_IMPCOUNTINGMETHOD	= TEXT( "ImpCountingMethod");
const TCHAR* XT_SWEEP_CONTROL_INTERFACE				= TEXT( "PRESS_SWEEP_CONTROL_INTERFACE");
const TCHAR* XT_WATER_CONTROL_INTERFACE				= TEXT( "PRESS_WATER_CONTROL_INTERFACE");
const TCHAR* XT_SHOW_HELP							= TEXT( "ShowHelp");
const TCHAR* XT_SHOW_2SIDES							= TEXT( "Show2Sides");

const TCHAR* XT_COLORASSIGNMENTS						= TEXT( "COLORASSIGNMENTS");
const TCHAR* XT_INK_TYPE								= TEXT( "INK_TYPE");
const TCHAR* XT_INKER_STATUS							=TEXT( "INKER_STATUS");
const TCHAR* XT_ONPRESS_ZONE_VALUES					=TEXT( "ONPRESS_ZONE_VALUES");
const TCHAR* XT_CONSOLE_ZONE_VALUES					=TEXT( "CONSOLE_ZONE_VALUES");
const TCHAR* XT_CONSOLE_ZONE_LOCK_STATUS				=TEXT("CONSOLE_ZONE_LOCK_STATUS");
const TCHAR* XT_ONPRESS_VALUE						=TEXT( "OnPressValue");
const TCHAR* XT_CONSOLE_VALUE						=TEXT( "ConsoleValue");
const TCHAR* XT_CONSOLE_ZONE_LOCK					=TEXT( "ConsoleZoneLock");
const TCHAR* XT_CORRECTION_VALUE						=TEXT( "CorrectionValue");
const TCHAR* XT_RAW_VALUE							=TEXT( "RawValue");
const TCHAR* XT_ADJ_VALUE							=TEXT( "AdjustedValue");
const TCHAR* XT_ONPRESS_SWEEP_VALUE					=TEXT( "ONPRESS_SWEEP_VALUE");
const TCHAR* XT_CONSOLE_SWEEP_VALUE					=TEXT( "CONSOLE_SWEEP_VALUE");
const TCHAR* XT_ONPRESS_WATER_VALUE					=TEXT( "ONPRESS_WATER_VALUE");
const TCHAR* XT_CONSOLE_WATER_VALUE					=TEXT( "CONSOLE_WATER_VALUE");
const TCHAR* XT_CIP3_CORRECTIONDATA					=TEXT( "CIP3_CORRECTION_VALUE");
const TCHAR* XT_CIP3_RAWDATA							=TEXT( "CIP3_RAW_VALUE");
const TCHAR* XT_CIP3_ADJDATA							=TEXT( "CIP3_ADJ_VALUE");
const TCHAR* XT_CIP3_SCANNEDUNIT						=TEXT( "CIP3_SCANNED_VALUE");
const TCHAR* XT_CIP3_KEYCOUNTFROMOUTFILE				= TEXT( "CIP3_OUTFILEKEYS_VALUE");

const TCHAR* XT_ACTIVE_JOBS							=TEXT( "ACTIVE_JOBS");
const TCHAR* XT_ACTIVE_JOB							=TEXT( "ACTIVE_JOB") ;
const TCHAR* XT_JOB									=TEXT( "MICROCOLOR_JOB");
const TCHAR*	XT_WEBS									=TEXT( "WEBS");
const TCHAR*	XT_WEB									=TEXT( "WEB");
const TCHAR* XT_FORMS								=TEXT( "FORMS");
const TCHAR*	XT_FORM									=TEXT( "FORM");
const TCHAR* XT_SURFACE								=TEXT( "SURFACE");
const TCHAR* XT_DESCRIPTION							=TEXT( "DESCRIPTION");
const TCHAR* XT_FORM_VERSION							=TEXT( "FORM_VERSION");
const TCHAR* XT_VERSION_LABEL						=TEXT( "VERSION_LABEL");
const TCHAR* XT_START_DAY							=TEXT( "START_DAY");
const TCHAR* XT_START_TIME							=TEXT( "START_TIME");
const TCHAR* XT_RUN_FLAG								=TEXT( "RUN_FLAG");
const TCHAR* XT_SAVED_FLAG							=TEXT( "SAVED_FLAG");
const TCHAR* XT_YEAR									=TEXT( "YEAR");
const TCHAR* XT_MONTH								=TEXT( "MONTH");
const TCHAR* XT_DAY									=TEXT( "DAY");
const TCHAR* XT_HOUR									=TEXT( "HOUR");
const TCHAR* XT_MINUTE								=TEXT( "MINUTE");
const TCHAR* XT_SECOND								=TEXT( "SECOND");
const TCHAR* XT_DATA_FILE_PATHES						=TEXT( "DATA_FILE_PATHES");
const TCHAR* XT_LOCAL_DATA_STORAGE					=TEXT( "LOCAL_DATA_STORAGE");
const TCHAR* XT_REMOTE_DATA_STORAGE					=TEXT( "REMOTE_DATA_STORAGE");
const TCHAR* XT_CLIENT_BACKUP_DRIVE					=TEXT( "CLIENT_BACKUP_DRIVE");
const TCHAR* XT_JOB_STORAGE_SHARE_NAME				=TEXT( "JOB_STORAGE_SHARE_NAME");
const TCHAR* XT_JOB_ARCHIVE_SHARE_NAME				= TEXT( "ARCHIVE_STORAGE_SHARE_NAME"); //WI#30968 provide archives share name
const TCHAR* XT_FORM_TEMPLATE_SHARE_NAME				= TEXT( "TEMPLATE_STORAGE_SHARE_NAME"); //WI31065 - Shared Name for Form Template storage
const TCHAR* XT_JMVJOBS_STORAGE_SHARE_NAME			=TEXT( "JOBS_STORAGE_SHARE_NAME"); // WI#31061 - Support to sharing the JOBS Folder
const TCHAR* XT_DEFAULT_COLOR_ORDER					=TEXT( "DEFAULT_COLOR_ORDER");
const TCHAR* XT_ADVUSER								=TEXT( "AdvUser");
const TCHAR* XT_CLIENTINTERFACE_CLEVEL1				=TEXT( "Level1");
const TCHAR* XT_CLIENTINTERFACE_CLEVEL2				=TEXT( "Level2");
const TCHAR* XT_CLIENTINTERFACE_CLEVEL3				=TEXT( "Level3");
/////////////////////////////////
//SWEEP AND WATER
const TCHAR* XT_MOTOR_CONTROL						=TEXT( "MOTOR_CONTROL");
const TCHAR* XT_SERVO_CONTROL						=TEXT( "SERVO_CONTROL");
const TCHAR* XT_MOTOR_AND_SERVO_CONTROL				=TEXT( "MOTOR_AND_SERVO_CONTROL");
const TCHAR* XT_STEP_ENABLED							=TEXT( "STEP_ENABLED");
const TCHAR* XT_REVERSED								=TEXT( "REVERSED");
const TCHAR* XT_LOW_BACKLASH_USED					=TEXT( "LOW_BACKLASH_USED");
const TCHAR* XT_OFFSET_ENABLED						=TEXT( "OFFSET_ENABLED");
const TCHAR* XT_USE_BANK1							=TEXT( "USE_BANK_1");
const TCHAR* XT_TURNS2								=TEXT( "TURNS2");
const TCHAR* XT_SWEEP_SERVO							=TEXT( "SWEEP_SERVO");
const TCHAR* XT_INITIAL_SURGE						=TEXT( "INITIAL_SURGE");
const TCHAR* XT_INCREMENTAL_SURGE					=TEXT( "INCREMENTAL_SURGE");
const TCHAR* XT_SPECIAL_MAPPING						=TEXT( "SPECIAL_MAPPING");


const TCHAR* XT_CONTROL_TYPE							=TEXT( "CONTROL_TYPE");
const TCHAR* XT_PLC_CONTROL							=TEXT( "PLC_CONTROL");
const TCHAR* XT_NILP_3300							=TEXT( "NILP_3300");
const TCHAR* XT_PLC_CONFIG							=TEXT( "PLC_CONFIG");//12-March-10, Modified by Sreejit for MT#15293
const TCHAR* XT_WASH_CYCLE_TIME						=TEXT( "WASH_CYCLE_TIME_IN_10TH_SEC");
const TCHAR* XT_MECH_DELAY							=TEXT( "MECH_DELAY_IN_MS");
const TCHAR* XT_TACH_PULSE_PER_EXECUTION_CYCLE		=TEXT( "TACH_PULSE_PER_EXECUTION_CYCLE");
const TCHAR* XT_SAMPLE_TIME_MS						=TEXT( "SAMPLE_TIME_IN_MS");  //18 Feb 2010 Mark Colvin MT16761
const TCHAR* XT_SWEEP_DIVISOR						=TEXT( "SWEEP_DIVISOR");
const TCHAR* XT_WATER_DIVISOR						=TEXT( "WATER_DIVISOR");
const TCHAR* XT_WATER_OUTPUT_MIN						=TEXT( "WATER_OUTPUT_MIN");
const TCHAR* XT_WATER_START_SPEED_MIN				=TEXT( "WATER_START_SPEED_MIN");
const TCHAR* XT_WATER_START_SPEED_MAX				=TEXT( "WATER_START_SPEED_MAX");
const TCHAR* XT_WATER_STARTUP_VOLTAGE				=TEXT( "WATER_STARTUP_VOLTAGE");

//press turn bar
const TCHAR* XT_PRESS_TURN_BARS						=TEXT( "PRESS_TURN_BARS");
const TCHAR* XT_TURN_BAR								=TEXT( "TURN_BAR");
const TCHAR* XT_AFTER_WHICH_UNIT						=TEXT( "AFTER_WHICH_UNIT");
const TCHAR* XT_ACTIVATED							= TEXT( "ACTIVATED");

//press air bars
const TCHAR* XT_PRESS_AIR_BARS						=TEXT( "PRESS_AIR_BARS");
const TCHAR* XT_AIR_BAR								=TEXT( "AIR_BAR");

//press max webs
const TCHAR* XT_PRESS_MAX_WEBS						=TEXT( "PRESS_MAX_WEBS");

const TCHAR* XT_AUTOSCANCAL							=TEXT( "AUTOSCANCAL");
const TCHAR*	XT_SWEEPZONERATIO						=TEXT( "SweepZoneRatio");
const TCHAR* XT_ZONEMARGIN							=TEXT( "ZoneMargin");
const TCHAR*	XT_EWMAFACTOR							=TEXT( "EWMAFilterParam");
const TCHAR* XT_SCAN_SWEEPADJ						=TEXT( "ScanSweepAdjust");
const TCHAR* XT_SWEEPDEF								=TEXT( "SweepDefault");
const TCHAR* XT_WEBBTYPE								=TEXT( "WEB_TYPE");
const TCHAR* XT_LIMITCHECKENABLED					=TEXT( "EnableLimitCheck");
const TCHAR* XT_BLADETOLERANCE						=TEXT( "BladeTolerance");

const TCHAR* XT_PRESS_AUTO_ZERO						=TEXT( "PressAutoZero");
const TCHAR* XT_PRESS_AUTO_ZERO_ENABLED				=TEXT( "AutoZeroEnabled");
const TCHAR* XT_PRESS_AZ_MODE						=TEXT( "AutoZeroMode");
const TCHAR* XT_PRESS_AZ_DEVICE_IP_ADR				=TEXT( "DeviceIPAddress");
const TCHAR* XT_PRESS_AZ_DEVICE_ID					=TEXT( "DeviceID");
const TCHAR* XT_PRESS_AZ_TIME_DELAY					=TEXT( "AutoZeroTimeDelay");
const TCHAR* XT_PRESS_AZ_FACTOR_FREQUENCY			=TEXT( "FactorFrequency");
const TCHAR* XT_PRESS_AZ_DRY_CONTACT_IDLE_STATE		=TEXT( "DryContactIdleState");
const TCHAR* XT_PRESS_AZ_POLL_TIME_PERIOD			=TEXT( "PollTimePeriod");
const TCHAR* XT_PRESS_AZ_IDLE_THRESHOLD_FPM			=TEXT( "IdleThresholdFPM");
const TCHAR* XT_PRESS_AZ_DELAY_FOR_FOUNTAIN_CLOSE	= TEXT("DelayForFountainClose");
const TCHAR* XT_PRESS_AZ_NUMBER_OF_SENSORS			= TEXT("NumberOfSensors");//WI30482
const TCHAR* XT_PRESS_AZ_DRY_CHANNELS_MAPPING		= TEXT("DryChannelsMapping");
const TCHAR* XT_PRESS_AZ_FREQUENCY_CHANNELS_MAPPING	= TEXT( "FrequencyChannelsMapping");
const TCHAR* XT_PRESS_AZ_MAPPING_ELEMENT				= TEXT( "MappingElement");
const TCHAR* XT_PRESS_AZ_INPUT_CHANNEL_ID			= TEXT( "InputChannelId");
const TCHAR* XT_PRESS_AZ_UNIT_NAME					= TEXT( "UnitName");

const TCHAR* XT_CIP3FOLDERLOCATION					= TEXT( "CIP3Path");
const TCHAR* XT_CIP3IMAGEFILETEMPPATH				=TEXT("CIP3ImagesPath");
const TCHAR* XT_PRESS_AUTO_ZERO_SERVOS				= TEXT("AutoZeroServos");

const TCHAR* XT_IMPOSITIONDATAENABLED				=TEXT( "EnableImpositionData");
const TCHAR* XT_IMPOSITIONDATAFOLDERLOCATION		= TEXT( "ImpositionDataPath");

//SERVO OFFSET TABLE
const TCHAR* XT_MCPRESS_SERVO_OFFSET_TABLE			= TEXT("MCPRESS_SERVO_OFFSET_TABLE"); 


///////////////////////////////////////////////////

const TCHAR* MC_CMOS_CONFIG		=	TEXT("CMOS_CONFIG");
const TCHAR* MC_CMOS_SIGNATURE   =  TEXT("CMOS_SIGNATURE");
const TCHAR* MC_CMOS_NUMPRESSES  =  TEXT("NumOFPresses");
const TCHAR* MC_CMOS_SITENUM	    =  TEXT("SITE_NUMBER");
const TCHAR* XT_INK_TYPES							= TEXT("INK_TYPES");
const TCHAR* XT_MCSYSTEM_INKLIBRARY					= TEXT("MCSYSTEM_INKLIBRARY");
const TCHAR* XT_DISPLAY_COLOR						= TEXT("DisplayColor");
const TCHAR* MC_CMOS_TOTALSPU    =  TEXT("SPU_CNT");
const TCHAR* MC_CMOS_WEBPRESS    =  TEXT("WEB_PRESS");
const TCHAR* MC_CMOS_SITEINVERT  =  TEXT("SITE_INVERT");
const TCHAR* MC_CMOS_SD_INSTALLED  =  TEXT("SD_INSTALLED");
const TCHAR* MC_CMOS_ZONE_DISTANCE =  TEXT("ZONE_DIST");
const TCHAR* MC_CMOS_FUNNY_FOUNTAINS =  TEXT("FUNNY_FOUNT");
const TCHAR* MC_CMOS_SPL_TURNS	    =  TEXT("SPECIAL_TURNS");
const TCHAR* MC_CMOS_PARTIALPRESS    =  TEXT("PARTIAL_PRSS");
const TCHAR* MC_CMOS_NUMZONES	    =  TEXT("NUM_ZONES");
const TCHAR* MC_CMOS_NUMUNITS	    =  TEXT("NUM_UNITS");
const TCHAR* MC_CMOS_NUMKEYS		    =  TEXT("NUM_KEYS");
const TCHAR* MC_CMOS_COLORSIGN	    =  TEXT("COLOR_SIGNATURE");
const TCHAR* MC_CMOS_INKTIMEUP	    =  TEXT("INK_TIMEUP");
const TCHAR* MC_CMOS_SCLASTSCAN	    =  TEXT("SC_LAST_SCAN");

const TCHAR* XT_BLACK				=	TEXT("Black");
const TCHAR* XT_CYAN				=	TEXT("Cyan");
const TCHAR* XT_YELLOW				=	TEXT("Yellow");
const TCHAR* XT_MAGENTA				=	TEXT("Magenta");
const TCHAR* XT_SPECIAL_1			=	TEXT("Special 1");
const TCHAR* XT_SPECIAL_2			=	TEXT("Special 2");
const TCHAR* XT_SPECIAL_3			=	TEXT("Special 3");
const TCHAR* XT_SPECIAL_4			=	TEXT("Special 4");
const TCHAR* XT_SPECIAL_5			=	TEXT("Special 5");
const TCHAR* XT_SPECIAL_6			=	TEXT("Special 6");
const TCHAR* XT_SPECIAL_7			=	TEXT("Special 7");
const TCHAR* XT_SPECIAL_8			=	TEXT("Special 8");
//25-Oct-10, SDV, 16543: Support upto 32 inkers (DCOS requirement)
const TCHAR* XT_SPECIAL_9			=	TEXT("Special 9"); 
const TCHAR* XT_SPECIAL_10			=	TEXT("Special 10");
const TCHAR* XT_SPECIAL_11			=	TEXT("Special 11");
const TCHAR* XT_SPECIAL_12			=	TEXT("Special 12");
const TCHAR* XT_SPECIAL				=	TEXT("Special %d");

//Auto Test
const TCHAR* XT_TOTAL_SPUS_TO_TEST			=	TEXT("TotalSPUsToTest");
const TCHAR* XT_TOTAL_UNITS_TO_TEST			=	TEXT("TotalUnitsToTest");
const TCHAR* XT_TOTAL_SERVOS_TO_TEST			=	TEXT("TotalServosToTest");
const TCHAR* XT_TOTAL_NUM_OF_CYCLES			=	TEXT("NoOfCycles");
const TCHAR* XT_TOTAL_TIME_DELAY				=	TEXT("TimeDelay");
const TCHAR* XT_TOTAL_LOOP_TYPE				=	TEXT("LoopType");
const TCHAR* XT_CLOSE_KEYS_UP_TO				=	TEXT("CloseKeysUpTo");
const TCHAR* XT_OPEN_KEYS_UP_TO				=	TEXT("OpenKeysUpTo");
const TCHAR* XT_WHICH_PORT_TO_TEST			=	TEXT("WhichPortToTest");
const TCHAR* XT_TOTAL_SWEEP_TO_TEST			=	TEXT("TotalSweepToTest");
const TCHAR* XT_OPEN_SWEEP_UP_TO				=	TEXT("OpenSweepUpTo");

// Multi web support - Standard Color Order 
const TCHAR* XT_SCO_WEB_INDEX				= TEXT("WEB_INDEX");
const TCHAR* XT_SCO_WEB_SIDE_COUNT			= TEXT("WEB_SIDE_COUNT");
const TCHAR* XT_SCO_WEB_SIDE_INDEX			= TEXT("WEB_SIDE_INDEX");

// WI30503: To Configure max number of fountain ports per SPU
const TCHAR* XT_MAX_FOUNTAIN_PORTS_SPU		= TEXT("MAX_FOUNTAIN_PORTS");

// WI30935: To support product options >> Jobs Management
const TCHAR* XT_PRODUCT_OPTIONS				= TEXT("PRODUCT_OPTIONS");
const TCHAR* XT_JOBS_MANAGEMENT_OPTION		= TEXT("JOBS_MANAGEMENT");
const TCHAR* XT_KEEP_LAST_VERSION_PROFILES_OPTION = TEXT("KEEP_ONLY_LAST_VERSION_PROFILES");
const TCHAR* XT_PROMPT_ZAI_NEEDED_ON_SERVER_RESTART = TEXT("PROMPT_ZEROALLINKER_ON_SERVER_RESTART"); //WI37511
const TCHAR* XT_NEWSPAPER_NAVIGATION_VIEW_OPTION = TEXT("NEWSPAPER_NAVIGATION_VIEW"); //WI68969
const TCHAR* XT_LABEL_TOWERS_WITH_NUMBERS = TEXT("LABEL_TOWERS_WITH_NUMBERS"); // WI81328

// To support SPU3 Changes for Mercury Server IP Address 
const TCHAR* XT_MERCURY_SERVER_CONFIG	= TEXT("MERCURY_SERVER_CONFIG");
const TCHAR* XT_MERCURY_SERVER	= TEXT("MERCURY_SERVER");

// WI30935: Job Queue XML and Job XML nodes
const TCHAR* XT_STATUS						= TEXT("STATUS");
const TCHAR* XT_CREATED_DAY					= TEXT("CREATED_DAY");
const TCHAR* XT_CREATED_TIME					= TEXT("CREATED_TIME");
const TCHAR* XT_JOBQUEUE						= TEXT("JOBQUEUE");
const TCHAR* XT_JOB_LIST						= TEXT("JOB_LIST");
const TCHAR* XT_JOBTAG						= TEXT("JOB");
const TCHAR* XT_SURFACES						= TEXT("SURFACES");
const TCHAR* XT_FORM_XML_FILE				= TEXT("FORM_XML_FILE");
const TCHAR* XT_LAST_RUN_DAY					= TEXT("LAST_RUN_DAY");
const TCHAR* XT_LAST_RUN_TIME				= TEXT("LAST_RUN_TIME");
const TCHAR* XT_FORM_PATH					= TEXT("FORM_PATH");
const TCHAR* XT_DATA_STORAGE					= TEXT("DATA_STORAGE");
const TCHAR* XT_DATA_PATH					= TEXT("DATA_PATH");
const TCHAR* XT_STANDARD_STORAGE				= TEXT("STANDARD");
const TCHAR* XT_TEMPLATE_STORAGE				= TEXT("TEMPLATE");
const TCHAR* XT_NETWORK_STORAGE				= TEXT("NETWORK");

// WI30911: Specific to CIP3 Form XML 
const TCHAR* XT_CIP3_FORM					= TEXT("CIP3_FORM");
const TCHAR* XT_CIP3_IMAGE_FILENAME			= TEXT("CIP3_IMAGE_FILENAME");
const TCHAR* XT_CIP3_ADJUST_SWEEP_VALUE		= TEXT("CIP3_ADJUST_SWEEP_VALUE");

// WI68969: To support saving Imposition Form details to CIP3 Form XML
const TCHAR* XT_IMPOSITION_FORM				= TEXT("IMPOSITION_FORM");
const TCHAR* XT_INKER_IMPOSITION			= TEXT("INKER_IMPOSITION");
const TCHAR* XT_CIP3_FORM_NAME				= TEXT("CIP3_FORM_NAME");
const TCHAR* XT_IMPOSITION_NUMBER			= TEXT("IMPOSITION_NUMBER");
const TCHAR* XT_PAGE_FORMAT					= TEXT("PAGE_FORMAT");
const TCHAR* XT_SHEETS_AROUND				= TEXT("SHEETS_AROUND");
const TCHAR* XT_SHEET_AROUND				= TEXT("SHEET_AROUND");
const TCHAR* XT_SHEETS_ACROSS				= TEXT("SHEETS_ACROSS");
const TCHAR* XT_SHEET_ACROSS				= TEXT("SHEET_ACROSS");
const TCHAR* XT_PLATES_AROUND				= TEXT("PLATES_AROUND");
const TCHAR* XT_PLATE_AROUND				= TEXT("PLATE_AROUND");
const TCHAR* XT_PLATES_ACROSS				= TEXT("PLATES_ACROSS");
const TCHAR* XT_PLATE_ACROSS				= TEXT("PLATE_ACROSS");
const TCHAR* XT_SECTION_NUMBER				= TEXT("SECTION_NUMBER");
const TCHAR* XT_PAGE_NUMBER					= TEXT("PAGE_NUMBER");

// WI71828: To support saving Inker ColorOK profiles to Active Status XML file
const TCHAR* XT_COLOR_OK_DONE				= TEXT("COLOR_OK_DONE");
const TCHAR* XT_COLOR_OK_PROFILE			= TEXT("COLOR_OK_PROFILE");

//WI67305: Mercury Server options
const TCHAR* XT_MERCURY_SERVER_OPTIONS		= TEXT("MERCURY_SERVER_OPTIONS");
const TCHAR* XT_SERVER_LOGDATA				= TEXT("LOGDATA");
const TCHAR* XT_SERVER_LOGIODATA			= TEXT("LOGIODATA");
const TCHAR* XT_SERVER_SIMULATION			= TEXT("SIMULATION");
const TCHAR* XT_SERVER_CPU_AFFINITY			= TEXT("CPU_AFFINITY");
const TCHAR* XT_SERVER_SPU_NOSTRESS			= TEXT("SPU_NOSTRESS");
const TCHAR* XT_SERVER_SPU3DEBUG			= TEXT("SPU3DEBUG");            
const TCHAR* XT_SERVER_IGNORE_SPU_RESPONSE	= TEXT("IGNORE_SPU_RESPONSE"); 
const TCHAR* XT_SERVER_FIXCOMPORTS			= TEXT("FIXCOMPORTS"); 

// WI102725: AVT PLC Configuration
const TCHAR* XT_MERCURY_AVT_PLC_CONFIG = TEXT("MERCURY_AVT_PLC_CONFIG");
const TCHAR* XT_AVT_PLC = TEXT("AVT_PLC");
// Sweep configuration members
const TCHAR* XT_SWEEP_CONFIG = TEXT("SWEEP_CONFIG");
const TCHAR* XT_SWEEP_SURGE = TEXT("SWEEP_SURGE");
const TCHAR* XT_SWEEP_DEF_ONTIME = TEXT("SWEEP_DEF_ONTIME");
const TCHAR* XT_SWEEP_MAX_ONTIME = TEXT("SWEEP_MAX_ONTIME");
const TCHAR* XT_SWEEP_SURGE_TRIM = TEXT("SWEEP_SURGE_TRIM");
const TCHAR* XT_SWEEP_METHOD_OF_SURGE = TEXT("SWEEP_METHOD_OF_SURGE");
const TCHAR* XT_SWEEP_SURGE_DEVICE = TEXT("SWEEP_SURGE_DEVICE");
const TCHAR* XT_SWEEP_RAMPING = TEXT("SWEEP_RAMPING");
const TCHAR* XT_SWEEP_TRIM_INFLUENCE = TEXT("SWEEP_TRIM_INFLUENCE");
const TCHAR* XT_SWEEP_FUNC_CONTROL = TEXT("SWEEP_FUNC_CONTROL");
const TCHAR* XT_SWEEP_TRIM_MANUAL = TEXT("SWEEP_TRIM_MANUAL");
const TCHAR* XT_SWEEP_MASTER_CONTROL = TEXT("SWEEP_MASTER_CONTROL");
const TCHAR* XT_SWEEP_MASTER_INFLUENCE = TEXT("SWEEP_MASTER_INFLUENCE");
const TCHAR* XT_SWEEP_DUCT_HOLDOFF = TEXT("SWEEP_DUCT_HOLDOFF");
const TCHAR* XT_SWEEP_DUCT_RANGES = TEXT("SWEEP_DUCT_RANGES");
const TCHAR* XT_SWEEP_DUCT_RANGE = TEXT("SWEEP_DUCT_RANGE");
// Water configuration members
const TCHAR* XT_WATER_CONFIG = TEXT("WATER_CONFIG");
const TCHAR* XT_WATER_FLOOD = TEXT("WATER_FLOOD");
const TCHAR* XT_WATER_DEF_ONTIME = TEXT("WATER_DEF_ONTIME");
const TCHAR* XT_WATER_MAX_ONTIME = TEXT("WATER_MAX_ONTIME");
const TCHAR* XT_WATER_FLOOD_TRIM = TEXT("WATER_FLOOD_TRIM");
const TCHAR* XT_WATER_METHOD_OF_FLOOD = TEXT("WATER_METHOD_OF_FLOOD");
const TCHAR* XT_WATER_FLOOD_DEVICE = TEXT("WATER_FLOOD_DEVICE");
const TCHAR* XT_WATER_RAMPING = TEXT("WATER_RAMPING");
const TCHAR* XT_WATER_TRIM_INFLUENCE = TEXT("WATER_TRIM_INFLUENCE");
const TCHAR* XT_WATER_FUNC_CONTROL = TEXT("WATER_FUNC_CONTROL");
const TCHAR* XT_WATER_TRIM_MANUAL = TEXT("WATER_TRIM_MANUAL");
const TCHAR* XT_WATER_MASTER_CONTROL = TEXT("WATER_MASTER_CONTROL");
const TCHAR* XT_WATER_MASTER_INFLUENCE = TEXT("WATER_MASTER_INFLUENCE");
// Press Speed configuration members
const TCHAR* XT_PRESS_SPEED_CONFIG = TEXT("PRESS_SPEED_CONFIG");
const TCHAR* XT_MIN_PRESS_SPEED = TEXT("MIN_PRESS_SPEED");
const TCHAR* XT_MAX_PRESS_SPEED = TEXT("MAX_PRESS_SPEED");
const TCHAR* XT_DISPLAY_PRESS_SPEED_OPTION = TEXT("DISPLAY_PRESS_SPEED_OPTION");

//WI102726: Ramp Updates
const TCHAR* XT_INKER_SWEEP_FUNCTION        = TEXT("INKER_SWEEP_FUNCTION");
const TCHAR* XT_INKER_WATER_FUNCTION        = TEXT("INKER_WATER_FUNCTION");
const TCHAR* XT_INKER_DUCTOR_SETTING        = TEXT("INKER_DUCTOR_SETTING");

const TCHAR* XT_MCSYSTEM_RAMPCURVES         = TEXT( "MCSYSTEM_RAMP_CURVES");
const TCHAR* XT_RAMPCURVE_DEFAULT           = TEXT( "RampCurveDefault");
const TCHAR* XT_RAMPCURVE_INUSE             = TEXT( "RampCurveInUse");
const TCHAR* XT_RAMPCURVE_SPEEDS            = TEXT( "RampCurveSpeeds");
const TCHAR* XT_RAMPCURVE_PRESETS           = TEXT( "RAMPCURVE_PRESETS");
const TCHAR* XT_RAMPCURVE_PRESET            = TEXT( "RAMP_PRESET");
const TCHAR* XT_RAMPCURVE_INKER_SWEEP       = TEXT( "RampCurveSweep");
const TCHAR* XT_RAMPCURVE_INKER_WATER       = TEXT( "RampCurveWater");

//WI128160: AVT PLC Config Parameters
const TCHAR* XT_MIN							= TEXT("MIN");
const TCHAR* XT_MAX							= TEXT("MAX");
const TCHAR* XT_SWEEP_INKER_WASH_UP			= TEXT("SWEEP_INKER_WASH_UP");
const TCHAR* XT_SWEEP_INK_MASTER_SETTING	= TEXT("SWEEP_INK_MASTER_SETTING");
const TCHAR* XT_WATER_MASTER_SETTING		= TEXT("WATER_MASTER_SETTING");

// WI145417: AVT PLC Water Adjustment Options
const TCHAR* XT_WATER_OPTIONS					= TEXT("WATER_OPTIONS");
const TCHAR* XT_WATER_HARDWARE_INTERFACE_TYPE	= TEXT("WATER_HARDWARE_INTERFACE_TYPE");
const TCHAR* XT_WATER_ENABLE_DIGITAL_CTRL_CANCEL= TEXT("WATER_ENABLE_DIGITAL_CTRL_CANCEL");

// WI145417: AVT PLC Water Ramp Curve parameters
const TCHAR* XT_WATER_SPEED_INFLUENCE		= TEXT("WATER_SPEED_INFLUENCE");
const TCHAR* XT_WATER_BASE_CURVE_MAX		= TEXT("WATER_BASE_CURVE_MAX");
const TCHAR* XT_WATER_MOTOR_CLAMP_MIN		= TEXT("WATER_MOTOR_CLAMP_MIN");
const TCHAR* XT_WATER_MOTOR_CLAMP_MAX		= TEXT("WATER_MOTOR_CLAMP_MAX");

// WI145417: AVT PLC Inker Adjustment Options
const TCHAR* XT_SWEEP_OPTIONS					= TEXT("SWEEP_OPTIONS");
const TCHAR* XT_SWEEP_HARDWARE_INTERFACE_TYPE	= TEXT("SWEEP_HARDWARE_INTERFACE_TYPE");
const TCHAR* XT_SWEEP_ENABLE_DIGITAL_CTRL_CANCEL= TEXT("SWEEP_ENABLE_DIGITAL_CTRL_CANCEL");

// WI145417: AVT PLC Inker Ramp Curve parameters
const TCHAR* XT_SWEEP_SPEED_INFLUENCE		= TEXT("SWEEP_SPEED_INFLUENCE");
const TCHAR* XT_SWEEP_BASE_CURVE_MAX		= TEXT("SWEEP_BASE_CURVE_MAX");
const TCHAR* XT_SWEEP_MOTOR_CLAMP_MIN		= TEXT("SWEEP_MOTOR_CLAMP_MIN");
const TCHAR* XT_SWEEP_MOTOR_CLAMP_MAX		= TEXT("SWEEP_MOTOR_CLAMP_MAX");

// Plate Info configuration members
const TCHAR* XT_PLATE_INFO_CONFIG			= TEXT("PLATE_INFO_CONFIG");
const TCHAR* XT_IMPRESSION_LENGTH_OF_PLATE	= TEXT("IMPRESSION_LENGTH_OF_PLATE");
const TCHAR* XT_NUM_OF_PLATES_IN_FOUNTAIN	= TEXT("NUM_OF_PLATES_IN_FOUNTAIN");
// Voltage parameters 
const TCHAR* XT_PRESS_SPEED_INPUT_VOLTAGE	= TEXT("PRESS_SPEED_INPUT_VOLTAGE");
const TCHAR* XT_SWEEP_INPUT_VOLTAGE			= TEXT("SWEEP_INPUT_VOLTAGE");
const TCHAR* XT_WATER_OUTPUT_VOLTAGE		= TEXT("WATER_OUTPUT_VOLTAGE");

// WI149994: Recall Form Options of Sweep control
const TCHAR* XT_SWEEP_RECALL_FORM_OPTIONS	= TEXT("SWEEP_RECALL_FORM_OPTIONS");
const TCHAR* XT_SWEEP_TRIM_SELECTED			= TEXT("SWEEP_TRIM_SELECTED");
const TCHAR* XT_SWEEP_DUCT_SETTING_SELECTED = TEXT("SWEEP_DUCT_SETTING_SELECTED");
const TCHAR* XT_SWEEP_FUNC_SETTING_SELECTED = TEXT("SWEEP_FUNC_SETTING_SELECTED");

// WI149994: Recall Form Options of Water control
const TCHAR* XT_WATER_RECALL_FORM_OPTIONS	= TEXT("WATER_RECALL_FORM_OPTIONS");
const TCHAR* XT_WATER_TRIM_SELECTED			= TEXT("WATER_TRIM_SELECTED");
const TCHAR* XT_WATER_FUNC_SETTING_SELECTED = TEXT("WATER_FUNC_SETTING_SELECTED");
